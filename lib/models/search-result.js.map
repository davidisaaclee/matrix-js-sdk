{"version":3,"file":"search-result.js","names":["SearchResult","fromJson","jsonObj","eventMapper","jsonContext","context","eventsBefore","events_before","map","eventsAfter","events_after","EventContext","result","threadRootId","ourEvent","filter","e","setPaginateToken","start","addEvents","end","rank","constructor"],"sources":["../../src/models/search-result.ts"],"sourcesContent":["/*\nCopyright 2015 - 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * @module models/search-result\n */\n\nimport { EventContext } from \"./event-context\";\nimport { EventMapper } from \"../event-mapper\";\nimport { IResultContext, ISearchResult } from \"../@types/search\";\n\nexport class SearchResult {\n    /**\n     * Create a SearchResponse from the response to /search\n     * @static\n     * @param {Object} jsonObj\n     * @param {function} eventMapper\n     * @return {SearchResult}\n     */\n\n    public static fromJson(jsonObj: ISearchResult, eventMapper: EventMapper): SearchResult {\n        const jsonContext = jsonObj.context || {} as IResultContext;\n        let eventsBefore = (jsonContext.events_before || []).map(eventMapper);\n        let eventsAfter = (jsonContext.events_after || []).map(eventMapper);\n\n        const context = new EventContext(eventMapper(jsonObj.result));\n\n        // Filter out any contextual events which do not correspond to the same timeline (thread or room)\n        const threadRootId = context.ourEvent.threadRootId;\n        eventsBefore = eventsBefore.filter(e => e.threadRootId === threadRootId);\n        eventsAfter = eventsAfter.filter(e => e.threadRootId === threadRootId);\n\n        context.setPaginateToken(jsonContext.start, true);\n        context.addEvents(eventsBefore, true);\n        context.addEvents(eventsAfter, false);\n        context.setPaginateToken(jsonContext.end, false);\n\n        return new SearchResult(jsonObj.rank, context);\n    }\n\n    /**\n     * Construct a new SearchResult\n     *\n     * @param {number} rank   where this SearchResult ranks in the results\n     * @param {event-context.EventContext} context  the matching event and its\n     *    context\n     *\n     * @constructor\n     */\n    constructor(public readonly rank: number, public readonly context: EventContext) {}\n}\n"],"mappings":";;;;;;AAoBA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAMO,MAAMA,YAAY,CAAC;EACtB;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,OAAcC,QAAQ,CAACC,OAAsB,EAAEC,WAAwB,EAAgB;IACnF,MAAMC,WAAW,GAAGF,OAAO,CAACG,OAAO,IAAI,CAAC,CAAmB;IAC3D,IAAIC,YAAY,GAAG,CAACF,WAAW,CAACG,aAAa,IAAI,EAAE,EAAEC,GAAG,CAACL,WAAW,CAAC;IACrE,IAAIM,WAAW,GAAG,CAACL,WAAW,CAACM,YAAY,IAAI,EAAE,EAAEF,GAAG,CAACL,WAAW,CAAC;IAEnE,MAAME,OAAO,GAAG,IAAIM,0BAAY,CAACR,WAAW,CAACD,OAAO,CAACU,MAAM,CAAC,CAAC;;IAE7D;IACA,MAAMC,YAAY,GAAGR,OAAO,CAACS,QAAQ,CAACD,YAAY;IAClDP,YAAY,GAAGA,YAAY,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,YAAY,KAAKA,YAAY,CAAC;IACxEJ,WAAW,GAAGA,WAAW,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,YAAY,KAAKA,YAAY,CAAC;IAEtER,OAAO,CAACY,gBAAgB,CAACb,WAAW,CAACc,KAAK,EAAE,IAAI,CAAC;IACjDb,OAAO,CAACc,SAAS,CAACb,YAAY,EAAE,IAAI,CAAC;IACrCD,OAAO,CAACc,SAAS,CAACV,WAAW,EAAE,KAAK,CAAC;IACrCJ,OAAO,CAACY,gBAAgB,CAACb,WAAW,CAACgB,GAAG,EAAE,KAAK,CAAC;IAEhD,OAAO,IAAIpB,YAAY,CAACE,OAAO,CAACmB,IAAI,EAAEhB,OAAO,CAAC;EAClD;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIiB,WAAW,CAAiBD,IAAY,EAAkBhB,OAAqB,EAAE;IAAA,KAArDgB,IAAY,GAAZA,IAAY;IAAA,KAAkBhB,OAAqB,GAArBA,OAAqB;EAAG;AACtF;AAAC"}