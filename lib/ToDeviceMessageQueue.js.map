{"version":3,"file":"ToDeviceMessageQueue.js","names":["MAX_BATCH_SIZE","ToDeviceMessageQueue","constructor","client","retryTimeout","clearTimeout","sending","running","logger","debug","headBatch","store","getOldestToDeviceBatch","sendBatch","removeToDeviceBatch","id","retryAttempts","e","retryDelay","MatrixScheduler","RETRY_BACKOFF_RATELIMIT","Math","floor","httpStatus","error","info","setTimeout","sendQueue","start","stop","queueBatch","batch","batches","i","length","push","eventType","slice","txnId","makeTxnId","saveToDeviceBatches","contentMap","item","userId","deviceId","payload","sendToDevice"],"sources":["../src/ToDeviceMessageQueue.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { logger } from \"./logger\";\nimport { MatrixClient } from \"./matrix\";\nimport { IndexedToDeviceBatch, ToDeviceBatch, ToDeviceBatchWithTxnId, ToDevicePayload } from \"./models/ToDeviceMessage\";\nimport { MatrixScheduler } from \"./scheduler\";\n\nconst MAX_BATCH_SIZE = 20;\n\n/**\n * Maintains a queue of outgoing to-device messages, sending them\n * as soon as the homeserver is reachable.\n */\nexport class ToDeviceMessageQueue {\n    private sending = false;\n    private running = true;\n    private retryTimeout: number = null;\n    private retryAttempts = 0;\n\n    constructor(private client: MatrixClient) {\n    }\n\n    public start(): void {\n        this.running = true;\n        this.sendQueue();\n    }\n\n    public stop(): void {\n        this.running = false;\n        if (this.retryTimeout !== null) clearTimeout(this.retryTimeout);\n        this.retryTimeout = null;\n    }\n\n    public async queueBatch(batch: ToDeviceBatch): Promise<void> {\n        const batches: ToDeviceBatchWithTxnId[] = [];\n        for (let i = 0; i < batch.batch.length; i += MAX_BATCH_SIZE) {\n            batches.push({\n                eventType: batch.eventType,\n                batch: batch.batch.slice(i, i + MAX_BATCH_SIZE),\n                txnId: this.client.makeTxnId(),\n            });\n        }\n\n        await this.client.store.saveToDeviceBatches(batches);\n        this.sendQueue();\n    }\n\n    public sendQueue = async (): Promise<void> => {\n        if (this.retryTimeout !== null) clearTimeout(this.retryTimeout);\n        this.retryTimeout = null;\n\n        if (this.sending || !this.running) return;\n\n        logger.debug(\"Attempting to send queued to-device messages\");\n\n        this.sending = true;\n        let headBatch;\n        try {\n            while (this.running) {\n                headBatch = await this.client.store.getOldestToDeviceBatch();\n                if (headBatch === null) break;\n                await this.sendBatch(headBatch);\n                await this.client.store.removeToDeviceBatch(headBatch.id);\n                this.retryAttempts = 0;\n            }\n\n            // Make sure we're still running after the async tasks: if not, stop.\n            if (!this.running) return;\n\n            logger.debug(\"All queued to-device messages sent\");\n        } catch (e) {\n            ++this.retryAttempts;\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            // eslint-disable-next-line new-cap\n            const retryDelay = MatrixScheduler.RETRY_BACKOFF_RATELIMIT(null, this.retryAttempts, e);\n            if (retryDelay === -1) {\n                // the scheduler function doesn't differentiate between fatal errors and just getting\n                // bored and giving up for now\n                if (Math.floor(e.httpStatus / 100) === 4) {\n                    logger.error(\"Fatal error when sending to-device message - dropping to-device batch!\", e);\n                    await this.client.store.removeToDeviceBatch(headBatch.id);\n                } else {\n                    logger.info(\"Automatic retry limit reached for to-device messages.\");\n                }\n                return;\n            }\n\n            logger.info(`Failed to send batch of to-device messages. Will retry in ${retryDelay}ms`, e);\n            this.retryTimeout = setTimeout(this.sendQueue, retryDelay);\n        } finally {\n            this.sending = false;\n        }\n    };\n\n    /**\n     * Attempts to send a batch of to-device messages.\n     */\n    private async sendBatch(batch: IndexedToDeviceBatch): Promise<void> {\n        const contentMap: Record<string, Record<string, ToDevicePayload>> = {};\n        for (const item of batch.batch) {\n            if (!contentMap[item.userId]) {\n                contentMap[item.userId] = {};\n            }\n            contentMap[item.userId][item.deviceId] = item.payload;\n        }\n\n        logger.info(`Sending batch of ${batch.batch.length} to-device messages with ID ${batch.id}`);\n\n        await this.client.sendToDevice(batch.eventType, contentMap, batch.txnId);\n    }\n}\n"],"mappings":"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"}